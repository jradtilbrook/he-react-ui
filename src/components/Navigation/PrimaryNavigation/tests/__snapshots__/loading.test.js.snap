// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PrimaryNavigation /> rendered correctly with loading fixture 1`] = `
<OnClickOutside(PrimaryNavigation)
  eventTypes={
    Array [
      "mousedown",
      "touchstart",
    ]
  }
  excludeScrollbar={false}
  items={Array []}
  loading={true}
  locations={Array []}
  logoutRoute="/logout"
  outsideClickIgnoreClass="ignore-react-onclickoutside"
  preventDefault={false}
  stopPropagation={false}
>
  <PrimaryNavigation
    bottomKeys={Array []}
    disableOnClickOutside={[Function]}
    enableOnClickOutside={[Function]}
    eventTypes={
      Array [
        "mousedown",
        "touchstart",
      ]
    }
    items={Array []}
    loading={true}
    locations={Array []}
    logo={
      Object {
        "icon": <HealthEngine
          className="logo"
          inverted={true}
        />,
        "route": "/",
      }
    }
    logoutRoute="/logout"
    outsideClickIgnoreClass="ignore-react-onclickoutside"
    preventDefault={false}
    siteName="HealthEngine"
    stopPropagation={false}
  >
    <div
      className="outer"
    >
      <div
        className="nav"
      >
        <div
          className="buckets"
        >
          <NavLink
            activeClassName="active"
            ariaCurrent="true"
            className="logoBucket"
            onClick={[Function]}
            to="/"
          >
            <Route
              path="/"
            >
              <Link
                aria-current="true"
                className="logoBucket active"
                onClick={[Function]}
                replace={false}
                style={Object {}}
                to="/"
              >
                <a
                  aria-current="true"
                  className="logoBucket active"
                  href="/"
                  onClick={[Function]}
                  style={Object {}}
                >
                  <div
                    className="logo"
                  >
                    <HealthEngine
                      className="logo"
                      inverted={true}
                    >
                      <svg
                        className="logo"
                        viewBox="0 0 48 38"
                      >
                        <path
                          d="M12.895 32.745a5.689 5.689 0 0 0 11.33 0V25.16h-11.33v7.585zM24.225 6.216a5.689 5.689 0 1 0-11.33 0v7.585h11.33V6.216z"
                          fill="#5BC0C9"
                        />
                        <path
                          d="M37.49 25.141h-5.689v7.585a5.689 5.689 0 0 0 11.33 0V19.452a5.689 5.689 0 0 1-5.641 5.69z"
                          fill="#C6E400"
                        />
                        <path
                          d="M37.49.546a5.689 5.689 0 0 0-5.689 5.689v7.585h5.689a5.689 5.689 0 0 1 5.689 5.69V6.234A5.689 5.689 0 0 0 37.49.546z"
                          fill="#C6E400"
                        />
                        <path
                          d="M5.17 14.043a5.689 5.689 0 0 0 0 11.33h7.585v-11.33H5.17zM24.225 13.82h7.605v11.33h-7.605z"
                          fill="#FFF"
                        />
                        <path
                          d="M12.895 13.82h11.33v11.33h-11.33z"
                          fill="#008EC8"
                        />
                        <path
                          d="M37.764 13.82h-5.963v11.321h5.963c3.047-.292 5.367-2.739 5.367-5.66 0-2.922-2.32-5.369-5.367-5.66z"
                          fill="#48B400"
                        />
                      </svg>
                    </HealthEngine>
                  </div>
                </a>
              </Link>
            </Route>
          </NavLink>
          <LoadingStrip
            className="loadingBucket"
          >
            <div
              className="outer loadingBucket"
            >
              <div
                className="inner"
              />
            </div>
          </LoadingStrip>
          <LoadingStrip
            className="loadingBucket"
          >
            <div
              className="outer loadingBucket"
            >
              <div
                className="inner"
              />
            </div>
          </LoadingStrip>
          <LoadingStrip
            className="loadingBucket"
          >
            <div
              className="outer loadingBucket"
            >
              <div
                className="inner"
              />
            </div>
          </LoadingStrip>
          <div
            className="bucketFiller"
          />
          <LoadingStrip
            className="loadingBucket"
          >
            <div
              className="outer loadingBucket"
            >
              <div
                className="inner"
              />
            </div>
          </LoadingStrip>
          <LoadingStrip
            className="loadingBucket"
          >
            <div
              className="outer loadingBucket"
            >
              <div
                className="inner"
              />
            </div>
          </LoadingStrip>
        </div>
      </div>
      <div
        className="spacer"
      />
      <div
        className="content"
        onClick={[Function]}
      >
        <withRouter(SubNavigation)
          loading={true}
          logoutRoute="/logout"
        >
          <Route
            render={[Function]}
          >
            <SubNavigation
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "mocked",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "mocked",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              loading={true}
              location={
                Object {
                  "hash": "",
                  "key": "mocked",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              logoutRoute="/logout"
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              <div
                className="bar"
              >
                <div
                  className="top"
                >
                  <div
                    className="heading"
                  >
                    <LoadingStrip
                      className="loadingHeading"
                    >
                      <div
                        className="outer loadingHeading"
                      >
                        <div
                          className="inner"
                        />
                      </div>
                    </LoadingStrip>
                  </div>
                  <span
                    className="control"
                  >
                    <LoadingStrip
                      className="loadingLocation"
                    >
                      <div
                        className="outer loadingLocation"
                      >
                        <div
                          className="inner"
                        />
                      </div>
                    </LoadingStrip>
                  </span>
                  <span
                    className="control logout"
                  >
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      className="navLink"
                      key="logout"
                      title="Logout"
                      to="/logout"
                    >
                      <Route
                        path="/logout"
                      >
                        <Link
                          aria-current={false}
                          className="navLink"
                          replace={false}
                          title="Logout"
                          to="/logout"
                        >
                          <a
                            aria-current={false}
                            className="navLink"
                            href="/logout"
                            onClick={[Function]}
                            title="Logout"
                          >
                            <Logout
                              className="icon"
                              fill="currentColor"
                              height={32}
                              width={32}
                            >
                              <svg
                                className="icon"
                                fill="currentColor"
                                height={32}
                                viewBox="0 1 16 16"
                                width={32}
                              >
                                <path
                                  d="M7.5 1.666c-.823 0-1.5.677-1.5 1.5v3h1v-3c0-.281.219-.5.5-.5h7c.281 0 .5.219.5.5v12c0 .281-.219.5-.5.5h-7a.493.493 0 0 1-.5-.5v-3H6v3c0 .823.677 1.5 1.5 1.5h7c.823 0 1.5-.677 1.5-1.5v-12c0-.823-.677-1.5-1.5-1.5h-7zM3.146 5.813L-.207 9.165l3.353 3.354.708-.707-2.147-2.147H11.5v-1H1.707L3.854 6.52l-.708-.707z"
                                />
                              </svg>
                            </Logout>
                            Logout
                          </a>
                        </Link>
                      </Route>
                    </NavLink>
                  </span>
                </div>
              </div>
            </SubNavigation>
          </Route>
        </withRouter(SubNavigation)>
        <div
          className="children"
        />
      </div>
    </div>
  </PrimaryNavigation>
</OnClickOutside(PrimaryNavigation)>
`;
